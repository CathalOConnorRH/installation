---
- include_role:
    name: namespace
    tasks_from: create
  vars:
    name: "{{ heimdall_namespace }}"
    display_name: "Heimdall"

- block:

  - template:
      src: heimdall-dockercfg.yml.j2
      dest: /tmp/heimdall-dockercfg.yml

  - name: Create ImageStream Pull Secret
    shell: oc apply -f /tmp/heimdall-dockercfg.yml -n {{ heimdall_namespace }}

  when: heimdall_pull_secret_name is defined and heimdall_pull_secret_token is defined

- name: Create Heimdall Operator Resources
  shell: "oc create -f {{ item }} -n {{ heimdall_namespace }}"
  with_items: "{{ heimdall_operator_resource_items }}"
  register: create_heimdall_operator_resource_cmd
  failed_when: create_heimdall_operator_resource_cmd.stderr != '' and 'AlreadyExists' not in create_heimdall_operator_resource_cmd.stderr

- template:
    src: cluster_role_binding.yml.j2
    dest: /tmp/cluster_role_binding.yml

- name: Create Heimdall Cluster Role Binding
  shell: "oc create -f /tmp/cluster_role_binding.yml -n {{ heimdall_namespace }}"
  register: create_heimdall_crb_cmd
  failed_when: create_heimdall_crb_cmd.stderr != '' and 'AlreadyExists' not in create_heimdall_crb_cmd.stderr

- name: "Wait for heimdall pods to be ready"
  shell: "oc get pods --namespace={{ heimdall_namespace }} --selector='name=heimdall' -o jsonpath='{.items[*].status.containerStatuses[?(@.ready==true)].ready}' | wc -w"
  register: heimdall_result
  until: heimdall_result.stdout.find("1") != -1
  retries: 135
  delay: 5
