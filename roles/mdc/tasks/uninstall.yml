---
- name: Register available resources
  shell: "oc get {{ item }} -n {{ mdc_namespace }} -o name"
  register: mdc_resource_list_cmd
  failed_when: false
  with_items:
    - mobiledeveloperconsole
    - grafanadashboards
    - prometheusrules
    - servicemonitors

- set_fact:
    mdc_resource_list: "{{ mdc_resource_list | default([]) + item.stdout_lines }}"
  with_items: "{{ mdc_resource_list_cmd.results }}"

- name: Delete available resources
  shell: "oc delete {{ item }} -n {{ mdc_namespace }}"
  register: output
  failed_when: output.stderr != '' and 'not found' not in output.stderr
  with_items: "{{ mdc_resource_list }}"

- name: Delete mdc oauthclient
  shell: "oc delete oauthclient {{ mdc_oauth_client_id }}"
  register: output
  failed_when: output.stderr != '' and 'not found' not in output.stderr

- name: Delete mdc operator
  shell: "oc delete deployment mobile-developer-console-operator -n {{ mdc_namespace }}"
  register: output
  failed_when: output.stderr != '' and 'not found' not in output.stderr

- name: "Wait for resources to be removed"
  shell: oc get {{ item }} -n {{ mdc_namespace }}
  register: result
  until: not result.stdout
  retries: 75
  delay: 10
  failed_when: result.stdout
  changed_when: False
  with_items: "{{ mdc_resource_list }}"

- name: Get a list of all mobile CRs
  shell: "oc get {{ item }} -n {{ mdc_namespace }} -o name"
  register: mdc_crs_list_cmd
  failed_when: false
  with_items:
    - mobileclients
    - keycloakrealms
    - pushapplications
    - androidvariants
    - iosvariants
    - mobilesecurityserviceapps

- set_fact:
    mdc_crs_list: "{{ mdc_crs_list | default([]) + item.stdout_lines }}"
  with_items: "{{ mdc_crs_list_cmd.results }}"

- name: Remove finalizers on CRs
  shell: "oc patch --type merge {{ item }} -p '{\"metadata\": {\"finalizers\": []}}' -n {{ mdc_namespace }}"
  failed_when: output.stderr != '' and 'not found' not in output.stderr
  with_items: "{{ mdc_crs_list }}"

- name: Delete CRs
  shell: "oc delete {{ item }} -n {{ mdc_namespace }}"
  register: output
  failed_when: output.stderr != '' and 'not found' not in output.stderr
  with_items: "{{ mdc_crs_list }}"

- name: "Wait for resources to be removed"
  shell: "oc get {{ item }} -n {{ mdc_namespace }}"
  register: result
  until: not result.stdout
  retries: 75
  delay: 10
  failed_when: result.stdout
  changed_when: False
  with_items: "{{ mdc_crs_list }}"

- name: "Delete MDC project"
  include_role:
    name: namespace
    tasks_from: delete
  vars:
    names:
      - "{{ mdc_namespace }}"

- name: "Delete MDC CRDs"
  shell: "oc delete crd {{ item }}"
  register: output
  failed_when: output.stderr != '' and 'not found' not in output.stderr
  with_items:
    - mobileclients.mdc.aerogear.org
    - mobiledeveloperconsoles.mdc.aerogear.org
