---
- name: Construct openshift host string
  shell: echo {{ openshift_master_public_url | default(openshift_asset_url, true) | replace('https://', '') }} | cut -d '/' -f1
  register: openshift_host

- name: Construct openshift oauth string
  shell: echo {{ openshift_master_url | replace('https://', '') }} | cut -d '/' -f1
  register: openshift_oauth_host

- name: Get SSO route
  shell: oc get route sso -o template --template \{\{.spec.host\}\} -n {{ eval_rhsso_namespace }}
  register: sso_route

- name: Bump the Web App operator version to {{ webapp_operator_release_tag }}
  shell: oc patch deployment tutorial-web-app-operator -n {{ eval_webapp_namespace }} --type json -p '[{"op":"replace", "path":"/spec/template/spec/containers/0/image", "value":"{{ upgrade_webapp_operator_image }}"}]'
  register: upgrade_webapp_operator
  failed_when: upgrade_webapp_operator.stderr != '' and 'not patched' not in upgrade_webapp_operator.stderr

- name: Wait for the new web app operator to be ready
  shell: "oc rollout status deployment/tutorial-web-app-operator -n {{ eval_webapp_namespace }}"
  register: rollout_cmd
  failed_when: rollout_cmd.rc != 0
  changed_when: rollout_cmd.rc == 0

- name: Add additional walkthrough locations in the default list
  set_fact:
    webapp_walkthrough_locations: "{{ webapp_walkthrough_locations + [datasync_walkthrough_location] }}"
  when: datasync | bool | default(true)

- name: Get AMQ console route
  shell: "oc get route/console -o template --template \{\{.spec.host\}\} -n {{ eval_enmasse_namespace }}"
  register: enmasse_console_route
  
- name: Generate WebApp custom resource template
  template:
    force: yes
    src: "cr.yaml.j2"
    dest: /tmp/webapp-cr.yml

- name: Apply WebApp custom resource
  shell: oc apply -f /tmp/webapp-cr.yml -n {{ webapp_namespace }}
  register: apply_webapp_custom_resource_cmd
  failed_when: apply_webapp_custom_resource_cmd.stderr != '' and 'Warning' not in apply_webapp_custom_resource_cmd.stderr
  changed_when: apply_webapp_custom_resource_cmd.rc == 0

- name: Reset webapp CR
  shell: oc patch webapp tutorial-web-app-operator -n {{ eval_webapp_namespace }} --type json -p '[{"op":"remove", "path":"/status"}]'
  register: patch_webapp
  failed_when: patch_webapp.stderr != '' and 'not patched' not in patch_webapp.stderr

- name: Delete the Web App deployment to let the operator handle the upgrade
  shell: oc delete dc tutorial-web-app -n {{ eval_webapp_namespace }}
  register: upgrade_webapp
  failed_when: upgrade_webapp.stderr != ''

- block: 
  - name: Wait for dc to come up
    shell: oc wait --for=condition=available dc tutorial-web-app  --namespace {{ webapp_namespace }} --timeout=600s
    register: result
    retries: 50
    delay: 1
    until: result.stdout is search("condition met")
    
  - name: Add unifiedpush in service list
    set_fact:
      webapp_provision_services: "{{ webapp_provision_services + ['unifiedpush'] }}"
      webapp_watch_services: "{{ webapp_watch_services + ['unifiedpush'] }}"
    when: ups | bool | default(true)

  - name: Set webapp env var
    shell: "oc set env \
    dc/tutorial-web-app \
    'OPTIONAL_PROVISION_SERVICES={{ webapp_provision_services|join(',') }}' \
    'OPTIONAL_WATCH_SERVICES={{ webapp_watch_services|join(',') }}' \
    -n {{ webapp_namespace }}"
    when: webapp_provision_services|length > 0 or webapp_watch_services|length > 0

  when: ups | bool | default(true)
